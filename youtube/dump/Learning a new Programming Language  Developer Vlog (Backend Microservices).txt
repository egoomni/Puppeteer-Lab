 hey yo it's November first I have to 
 finish my website by the end of this 
 month well that's just a self-imposed 
 deadline but I've learned quite a bit in 
 the past month or two I'm excited I 
 don't know if I even did I even show you 
 this I've come up with my website like 
 my micro services architecture v2 
 finally I've split my back-end into two 
 sections okay CPU intensive and non CPU 
 intensive so nodejs is only good for the 
 i/o bound activities the CPU bound 
 activities we're going to use asp.net 
 core I I didn't understand why what the 
 difference between Java and c-sharp was 
 for the longest time but now I finally 
 see that like c-sharp is kind of solving 
 all the problems I had with Java for web 
 development it has a lot of asynchronous 
 built into it 
 I know Java so well I've never used 
 c-sharp so that means over the next 
 three weeks I'm gonna have to teach 
 myself c-sharp while building build my 
 whole website in today's video we're 
 gonna build one of the micro-services 
 it's probably gonna take more than one 
 day to though we need to store our 
 information in a database and then we 
 need to write a c-sharp application that 
 pulls github inserts data into our 
 database it's gonna be so fun so hug 
 okay so our software page currently 
 looks like this and then you can see I 
 was trying to 
 there's only do projects here but 
 instead of doing this we're just gonna 
 have this huge table and we're just 
 going to display all my github projects 
 I'm excited to see all this data 
 [Music] 
 Oh 
 [Music] 
 Oh 
 [Music] 
 okay so I've been working on the 
 scheduler you know I looked up 
 schedulers in dotnet core and I found 
 this one hang fire 
 it looks pretty solid a lot of the time 
 you have background tasks so for example 
 my my github thing I need to pull github 
 and insert the changes into my database 
 every like 10 minutes right and then the 
 front-end can just contact my database 
 without having to actually like it would 
 be a bad design if the user every 
 request contacted github because I would 
 overload github like let's say a 
 thousand people join my site we don't 
 want to make a thousand requests to 
 github I don't really know what I'm 
 doing right now I'm trying to learn 
 dotnet I don't know I'm trying to figure 
 it all out I'm just gonna put on music 
 and there's work just trying to figure 
 it out man 
 [Music] 
 now we have to take our massive JSON and 
 convert it into objects holy whoa 
 there is a list and each object is like 
 a project right all I had to do was say 
 read as async list project and then I 
 just defined the project to be this and 
 then that's it so now we have both the 
 github projects and our local projects 
 we've got one record in our database and 
 it's just this fake data that I just 
 threw in there it's basically it's just 
 this data so this local should populate 
 with this it's coming from our database 
 so I'm freaking out and local is here oh 
 oh this song is so good 
 [Music] 
 chopping out the house nickel doors 
 [Music] 
 Wow now we've got something that can 
 automatically detect what's changed we 
 should see all these rows get removed 
 and then this this should become 
 up-to-date with what github has right 
 now which was mind-blowing right so 
 we're gonna run it for like the first 
 time it's gonna open up ah Wow let's see 
 what our database looks like now huh 
 okay now we can test our thing let's 
 that's all back and you can't get rid of 
 it now 
 [Music] 
 [Music] 
 we go to the Hank four ah sick 
 both of these don't exist right now it's 
 set up - it says it's gonna execute in 
 26 minutes but little does it know it's 
 gonna have to 
 here we go processing a few seconds ago 
 wait - did it just just go oh it just 
 went Wow I love all you can see my JSON 
 here it's pretty beautiful dude now I 
 get you know I didn't even plan to make 
 this into a video because I just code 
 for like 12 hours at a time and then 
 it's very hard to extract any any 
 talking out of that any explanation so 
 the final result dude what what is the 
 final result the final result is we have 
 a service that can pull github and 
 insert the changes into my database now 
 I used an open source software called 
 hang fire and that's what you saw on the 
 dashboard and that's what that's what 
 can schedule jobs based on a cron 
 schedule all I have to do to create a 
 new service is I can write a regular 
 object like this is the function that I 
 want you to execute schedule a recurring 
 job and schedule it on this on this cron 
 schedule and then all I have to do is go 
 into my startup and I have to just say 
 jobs dot add type of and then the type 
 of the the class that's it 
 so anything anytime I'm like oh I want 
 to create a new background service all I 
 have to do is add two lines of code and 
 then just just write just code as I 
 normally would which is which is really 
 what excites me that was my main goal 
 from this project was so that in the 
 future I have a system that allows me to 
 do that on a bigger scale so obviously 
 I'm excited yeah man 
 you guys should subscribe and follow my 
 social medias and I will see you I'll 
 see you when I see you okay I gotta I 
 gotta make the videos good dude I gotta 
 make the videos good okay I'll try and 
 post more often 
 [Music] 